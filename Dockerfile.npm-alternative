# ðŸš€ DOCKERFILE ALTERNATIF AVEC NPM - SOLUTION GARANTIE
FROM node:20-alpine

WORKDIR /app

# NODE_ENV=development pour installer devDependencies
ENV NODE_ENV=development

# Copier package.json 
COPY package.json ./

# SOLUTION 2: Utiliser NPM au lieu de yarn pour Ã©viter les conflits
# Cette approche Ã©vite complÃ¨tement les problÃ¨mes de yarn.lock
RUN rm -f package-lock.json yarn.lock && \
    npm install --no-package-lock --legacy-peer-deps

# VÃ©rifier installation
RUN ls node_modules/@vitejs/plugin-react/package.json && echo "âœ… @vitejs/plugin-react installÃ©"

# Copier le code source
COPY . .

# Build avec NODE_ENV=production
ENV NODE_ENV=production
RUN npm run build

# VÃ©rifier que dist/ existe
RUN ls -la dist/index.html && echo "âœ… Build rÃ©ussi"

# Stage production avec nginx
FROM nginx:alpine

COPY --from=0 /app/dist /usr/share/nginx/html

# Config nginx pour SPA
RUN echo 'server { listen 3000; root /usr/share/nginx/html; index index.html; location / { try_files $uri $uri/ /index.html; } }' > /etc/nginx/conf.d/default.conf

EXPOSE 3000
CMD ["nginx", "-g", "daemon off;"]